.grid-container {
  display: grid;
  width: 100vw;
  height: auto;
  grid-template-columns: 1fr 2.1fr 1fr 1.1fr; /* Bob was right. It's maddening to keep playing around with incremental fractions. */
  grid-template-rows: .65fr .7fr 1.6fr 0.8fr;
  gap: .020rem;
  grid-template-areas:
    "header  header  header  header"
    "mezzanine mezzanine mezzanine mezzanine"
    "sidebar blog-1 blog-2 sidebar-2"
    "footer footer footer footer";
}

/* Hardly any of this CSS works right, and it's got me twisted in knots. */
  
.header {
  grid-area: header;
}

.mezzanine {
  grid-area: mezzanine;
}
  
.sidebar {
  grid-area: sidebar;
}
  
.sidebar-2 {
  grid-area: sidebar-2;
}
  
.blog-1 {
  grid-area: blog-1;
}
  
.blog-2 {
  grid-area: blog-2;
}
  
.footer {
  grid-area: footer;
}
/* Maybe on my next attempt at this project, I should pick either Grid or Flex, and stick with the choice. */

body {
  margin: 0;
  padding: 0;
}

.blog-1 #sqaure {
  float: left;
  width: 5vw;
  height: 5vw;
  padding: 2.5px;
}

.header > a {
  cursor: pointer;
}
  
.item {
  display: flex;
  justify-content: center;
  
}

.mezzanine button {
  align-items: normal;
}

button {
  background-color: orangered; /* Apparently I can build a working button, but the only good page full of buttons is BWAMP. */
  padding: 10px;
  text-align: center;
  text-decoration: none;
  font-size: 12px;
  font-family: Verdana,Tahoma, sans-serif;
  text-decoration: none;
}
  
button:hover { 
  transition-duration: 0.5s;
  background-color: goldenrod;
}

p .footer {
  text-align: center;
}
  
input:active {
  background-color: honeydew;
}
  
textarea:active {
  background-color: honeydew;
}
  
form button {
  align-items: normal;
  text-decoration: none;
}

.header {
  align-items: center;
}

.mezzanine #square {
  display: flex;
  justify-items: center;
  align-content: space-between; 
}
  
.sidebar {
  display: flex;
}
  
.sidebar-2 {
  display: flex;
}
  
.blog-1 {
  display: flex;
}

.blog-2 {
  display: flex;
}

form {
  justify-self: start;
}

.footer {
  display: flex;
  background-color: wheat;
}